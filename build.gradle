buildscript {
    buildscript { scriptHandler ->
        apply from: 'buildscript.gradle', to: scriptHandler
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.+"
    }
}

apply plugin: 'idea'
apply plugin: 'eclipse'

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

subprojects {
    group = 'me.insidezhou.instep'
    version = '1.0.0-SNAPSHOT'

    ext.kotlinVersion = '1.2.50'

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'org.jetbrains.dokka'

    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        testImplementation group: 'org.testng', name: 'testng', version: '6.9.13'
    }

    jar {
        baseName "$rootProject.name-$project.name"
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        options.encoding = "UTF-8"
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    dokka {
        outputFormat = "javadoc"
        outputDirectory = "$buildDir/javadoc"
    }

    task docJar(type: Jar, dependsOn: dokka) {
        classifier = 'javadoc'
        from dokka.outputDirectory
    }

    test {
        useTestNG()
    }

    artifacts {
        archives jar, sourceJar, docJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Instep'
                    description 'Tools are designed to make coding easier.'
                    url 'https://github.com/InsideZhou/Instep'

                    scm {
                        connection 'scm:git:git://github.com/InsideZhou/Instep.git'
                        developerConnection 'scm:git:ssh://github.com/InsideZhou/Instep.git'
                        url 'https://github.com/InsideZhou/Instep'

                    }

                    licenses {
                        license {
                            name 'The 2-Clause BSD License'
                            url 'https://opensource.org/licenses/BSD-2-Clause'
                        }
                    }

                    developers {
                        developer {
                            name 'Inside Zhou'
                            email 'inside@insidezhou.me'
                        }
                    }
                }
            }
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        def localDep = pom.dependencies.find { dep -> dep.groupId == project.group }
        if (localDep) {
            localDep.artifactId = "$rootProject.name-$localDep.artifactId"
        }
    }
}
